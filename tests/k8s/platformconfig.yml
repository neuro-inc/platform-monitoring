apiVersion: v1
kind: ConfigMap
metadata:
  name: platformconfig-cloud-providers
data:
  config.yaml: |
    aws:
      node_pools:
      - machine_type: m5.large
        cpu: 2
        available_cpu: 1
        memory_mb: 8192
        available_memory_mb: 6144
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformconfig
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformconfig
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformconfig
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      initContainers:
      - name: platformconfig-migrations
        image: ghcr.io/neuro-inc/platformconfig:latest
        imagePullPolicy: Always
        command: ["alembic", "upgrade", "head"]
        env:
        - name: NP_POSTGRES_HOST
          value: platformconfig-postgres
        - name: NP_POSTGRES_PORT
          value: "5432"
        - name: NP_POSTGRES_USERNAME
          value: postgres
        - name: NP_POSTGRES_PASSWORD
          value: postgres
        - name: NP_POSTGRES_DB_NAME
          value: postgres
      containers:
      - name: platformconfig
        image: ghcr.io/neuro-inc/platformconfig:latest
        imagePullPolicy: Always
        env:
        - name: NP_LOG_LEVEL
          value: INFO
        - name: NP_API_PORT
          value: "8080"
        - name: NP_PLATFORM_AUTH_URL
          value: http://platformauthapi:8080
        - name: NP_PLATFORM_CONFIG_TOKEN
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6ImNsdXN0ZXIifQ.kZG6EyaHMa2gNzrgKQlwVnZ0OZ5mruFZ0xVAbntm-dU
        - name: NP_PUBLIC_NEURO_REGISTRY_URL
          value: not-important
        - name: NP_PUBLIC_NEURO_HELM_URL
          value: not-important
        - name: NP_PUBLIC_PLATFORM_URL
          value: not-important
        - name: NP_PLATFORM_API_URL
          value: http://platformapi:8080
        - name: NP_AWS_REGION
          value: not-important
        - name: NP_AWS_ACCESS_KEY_ID
          value: not-important
        - name: NP_AWS_SECRET_ACCESS_KEY
          value: not-important
        - name: NP_AWS_ROUTE53_MAIN_ZONE_ID
          value: not-important
        - name: NP_CLUSTER_DNS_SUFFIX
          value: not-important
        - name: NP_K8S_URL
          value: not-important
        - name: NP_K8S_WORKFLOW_NAMESPACE
          value: not-important
        - name: NP_JOB_FALLBACK_HOSTNAME
          value: not-important
        - name: NP_PLATFORM_INFRA_IMAGE_TAG
          value: not-important
        - name: NP_PLATFORM_INFRA_IMAGE_NAME
          value: not-important
        - name: NP_PLATFORM_INFRA_IMAGE_PULL_POLICY
          value: Always
        - name: NP_POSTGRES_HOST
          value: platformconfig-postgres
        - name: NP_POSTGRES_PORT
          value: "5432"
        - name: NP_POSTGRES_USERNAME
          value: postgres
        - name: NP_POSTGRES_PASSWORD
          value: postgres
        - name: NP_POSTGRES_DB_NAME
          value: postgres
        - name: NP_CLOUD_PROVIDERS_PATH
          value: /etc/platform-config/config.yaml
        - name: NP_CLUSTER_DNS_ZONE
          value: https://kubernetes.default.svc
        volumeMounts:
        - name: cloud-providers
          mountPath: /etc/platform-config
      volumes:
      - name: cloud-providers
        configMap:
          name: platformconfig-cloud-providers
---
apiVersion: v1
kind: Service
metadata:
  name: platformconfig
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    service: platformconfig
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformconfig-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformconfig-postgres
  template:
    metadata:
      labels:
        service: platformconfig-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12.11
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: platformconfig-postgres
  labels:
    app: platformconfig
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   service: platformconfig-postgres
