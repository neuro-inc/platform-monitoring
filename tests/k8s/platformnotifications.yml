apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformnotifications-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformnotifications-redis
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformnotifications-redis
    spec:
      containers:
      - name: redis
        image: redis:4
---
apiVersion: v1
kind: Service
metadata:
  name: platformnotifications-redis
spec:
  type: LoadBalancer
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    service: platformnotifications-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformnotifications
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformnotifications
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformnotifications
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      initContainers:
      - name: wait-for-config
        image: curlimages/curl:8.4.0
        command: [sh]
        args:
        - -c
        - |
          code=-1

          while [ $code != 0 ]
          do
            sleep 1
            curl -f -H "Authorization: Bearer $NP_TOKEN" "$NP_PLATFORM_API_URL/api/v1/config"
            code=$?
          done
        env:
        - name: NP_PLATFORM_API_URL
          value: http://platformapi:8080
        - name: NP_TOKEN
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6Im5vdGlmaWNhdGlvbiIsImh0dHBzOi8vcGxhdGZvcm0ubmV1cm9tYXRpb24uaW8vdXNlciI6Im5vdGlmaWNhdGlvbiJ9.XiHClMa0aNPK7L6mm8NJrux8UQ414tN3UdVoxR6ybv8
      containers:
      - name: platformnotifications
        image: ghcr.io/neuro-inc/platformnotificationsapi:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: NP_LOG_LEVEL
          value: INFO
        - name: NP_NOTIFICATIONS_PLATFORM_API_URL
          value: http://platformapi:8080/api/v1
        - name: NP_NOTIFICATIONS_PLATFORM_API_TOKEN
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6Im5vdGlmaWNhdGlvbiIsImh0dHBzOi8vcGxhdGZvcm0ubmV1cm9tYXRpb24uaW8vdXNlciI6Im5vdGlmaWNhdGlvbiJ9.XiHClMa0aNPK7L6mm8NJrux8UQ414tN3UdVoxR6ybv8
        - name: NP_NOTIFICATIONS_PLATFORM_AUTH_URL
          value: http://platformauthapi:8080
        - name: NP_NOTIFICATIONS_PLATFORM_AUTH_TOKEN
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6Im5vdGlmaWNhdGlvbiIsImh0dHBzOi8vcGxhdGZvcm0ubmV1cm9tYXRpb24uaW8vdXNlciI6Im5vdGlmaWNhdGlvbiJ9.XiHClMa0aNPK7L6mm8NJrux8UQ414tN3UdVoxR6ybv8
        - name: NP_NOTIFICATIONS_PLATFORM_ADMIN_URL
          value: http://platformadmin:8080
        - name: NP_NOTIFICATIONS_PLATFORM_ADMIN_TOKEN
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6Im5vdGlmaWNhdGlvbiIsImh0dHBzOi8vcGxhdGZvcm0ubmV1cm9tYXRpb24uaW8vdXNlciI6Im5vdGlmaWNhdGlvbiJ9.XiHClMa0aNPK7L6mm8NJrux8UQ414tN3UdVoxR6ybv8
        - name: NP_DB_REDIS_URI
          value: redis://platformnotifications-redis:6379/0
        - name: NP_NOTIFICATIONS_TRANSPORT
          value:
        - name: SECURITY_PRIVATE_KEY_BASE64
          value: cHJpdmF0ZSBrZXk=
        - name: SECURITY_JWK_KID
          value: kid
        - name: NP_CONSOLE_URL
          value: http://localhsot:8080
---
apiVersion: v1
kind: Service
metadata:
  name: platformnotifications
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    service: platformnotifications
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: registry3
#  namespace: kube-system
#spec:
#  type: LoadBalancer
#  ports:
#  - port: 5000
#    targetPort: 5000
#  selector:
#    actual-registry: "true"
#    kubernetes.io/minikube-addons: registry
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: registry2
#  namespace: kube-system
#spec:
#  type: ClusterIP
#  ports:
#  - port: 5000
#    targetPort: 5000
#  selector:
#    actual-registry: "true"
#    kubernetes.io/minikube-addons: registry
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system
data:
  Corefile: |-
    .:53 {
        log
        errors

        rewrite name localhost:5000  registry.kube-system.svc.cluster.local

        health {
           lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           fallthrough in-addr.arpa ip6.arpa
           ttl 30
        }
        prometheus :9153
        hosts {
           192.168.49.1 host.minikube.internal
           fallthrough
        }
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
