apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: elasticsearch-logging
spec:
  replicas: 1
  selector:
    matchLabels:
      service: elasticsearch-logging
  template:
    metadata:
      labels:
        service: elasticsearch-logging
    spec:
      containers:
      - name: elasticsearch-logging
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        env:
        - name: "ES_JAVA_OPTS"
          value: "-Xms256m -Xmx256m"
        - name: "discovery.type"
          value: "single-node"
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging
spec:
  type: LoadBalancer
  ports:
  - port: 9200
    targetPort: 9200
  selector:
    service: elasticsearch-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      service: minio
  template:
    metadata:
      labels:
        service: minio
    spec:
      containers:
        - image: minio/minio:latest
          name: minio
          args:
            - server
            - /data
          env:
            - name: MINIO_ROOT_USER
              value: access_key
            - name: MINIO_ROOT_PASSWORD
              value: secret_key
            - name: MINIO_STORAGE_CLASS_STANDARD
              value: EC:0
          volumeMounts:
            - mountPath: /data
              name: data
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 5
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  type: LoadBalancer
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    service: minio
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
data:
  fluentd.conf: |
    # TCP input to receive logs from
    <source>
    @type forward
    bind 0.0.0.0
    port 24224
    </source>

    # HTTP input for the liveness and readiness probes
    <source>
    @type http
    bind 0.0.0.0
    port 9880
    </source>

    # Ignore fluentd own events
    <match fluent.**>
    @type null
    </match>

    # Throw the healthcheck to the standard output instead of forwarding it
    <match fluentd.healthcheck>
    @type stdout
    </match>

    # Send the logs to S3
    <match **>
    @type s3

    aws_key_id access_key
    aws_sec_key secret_key
    s3_region minio
    s3_bucket logs
    s3_endpoint http://minio:9000
    force_path_style true

    path ${tag}/
    store_as gzip
    s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension}

    <format>
        @type json
    </format>

    <buffer tag,time>
        @type memory

        timekey 1s
        timekey_wait 0
        timekey_use_utc true
    </buffer>
    </match>
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fluentd
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  serviceName: fluentd
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: docker.io/bitnami/fluentd:1.10.4-debian-10-r2
        env:
          - name: FLUENTD_CONF
            value: fluentd.conf
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: config
          mountPath: /opt/bitnami/fluentd/conf/fluentd.conf
          subPath: fluentd.conf
          readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /fluentd.healthcheck?json=%7B%22ping%22%3A+%22pong%22%7D
            port: 9880
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: fluentd-config
---
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  labels:
    k8s-app: fluentd-logging
    version: v1
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: health
    port: 9880
    protocol: TCP
    targetPort: 9880
  - name: forward
    port: 24224
    protocol: TCP
    targetPort: 24224
  selector:
    k8s-app: fluentd-logging
    version: v1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
data:
  parsers.conf: |
    [PARSER]
        Name        json
        Format      json
        Time_Key    time
        Time_Format %d/%b/%Y:%H:%M:%S %z
        Time_Keep   On

    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        cri
        Format      regex
        Regex       ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
        Time_Keep   On
  fluent-bit.conf: |
    [SERVICE]
        Flush        1
        Daemon       Off
        Log_Level    info
        Parsers_File parsers.conf

    [INPUT]
        Name             tail
        Path             /var/log/containers/*.log
        Parser           docker
        Tag              kube.*
        Refresh_Interval 5
        Mem_Buf_Limit    5MB
        Skip_Long_Lines  On

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_Tag_Prefix     kube.var.log.containers.
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off

    [OUTPUT]
        Name            es
        Match           kube.var.log.containers.job-*
        Host            elasticsearch-logging
        Port            9200
        Retry_Limit     False
        Type            fluent-bit
        Time_Key        @timestamp
        Replace_Dots    On
        Logstash_Format On
        Logstash_Prefix logstash

    [OUTPUT]
        Name        forward
        Match       kube.var.log.containers.job-*
        Host        fluentd
        Port        24224
        tls         off
        Retry_Limit False
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  labels:
    app: fluent-bit
spec:
  selector:
    matchLabels:
      app: fluent-bit
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fluent-bit
    spec:
      containers:
      - image: fluent/fluent-bit:1.3.7
        name: fluent-bit
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - name: config
          mountPath: /fluent-bit/etc/fluent-bit.conf
          subPath: fluent-bit.conf
          readOnly: true
        - name: config
          mountPath: /fluent-bit/etc/parsers.conf
          subPath: parsers.conf
          readOnly: true
        - mountPath: /mnt
          name: mnt
          readOnly: true
      volumes:
      - hostPath:
          path: /var/log
          type: ""
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
      - name: config
        configMap:
          name: fluent-bit-config
      - hostPath:
          path: /mnt
          type: ""
        name: mnt
