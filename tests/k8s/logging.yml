apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: elasticsearch-logging
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      service: elasticsearch-logging
  template:
    metadata:
      labels:
        service: elasticsearch-logging
    spec:
      containers:
      - name: elasticsearch-logging
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        env:
        - name: "ES_JAVA_OPTS"
          value: "-Xms256m -Xmx256m"
        - name: "discovery.type"
          value: "single-node"
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging
  namespace: kube-system
spec:
  type: LoadBalancer
  ports:
  - port: 9200
    targetPort: 9200
  selector:
    service: elasticsearch-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      service: minio
  template:
    metadata:
      labels:
        service: minio
    spec:
      containers:
        - image: minio/minio:latest
          name: minio
          args:
            - server
            - /data
          env:
            - name: MINIO_ACCESS_KEY
              value: access_key
            - name: MINIO_SECRET_KEY
              value: secret_key
            - name: MINIO_REGION_NAME
              value: region-1
            - name: MINIO_STORAGE_CLASS_STANDARD
              value: EC:4
          volumeMounts:
            - mountPath: /data
              name: data
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 5
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: kube-system
spec:
  type: LoadBalancer
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    service: minio
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  serviceName: fluentd
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: docker.io/bitnami/fluentd:1.10.4-debian-10-r2
        env:
          - name: FLUENTD_CONF
            value: fluentd.conf
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: config
          mountPath: /opt/bitnami/fluentd/conf/fluentd.conf
          readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /fluentd.healthcheck?json=%7B%22ping%22%3A+%22pong%22%7D
            port: 9880
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        hostPath:
          path: /files/fluentd.conf
          type: File
---
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: health
    port: 9880
    protocol: TCP
    targetPort: 9880
  - name: forward
    port: 24224
    protocol: TCP
    targetPort: 24224
  selector:
    k8s-app: fluentd-logging
    version: v1
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: kube-system
  labels:
    app: fluent-bit
spec:
  selector:
    matchLabels:
      app: fluent-bit
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fluent-bit
    spec:
      containers:
      - image: fluent/fluent-bit:1.3.7
        name: fluent-bit
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - name: config
          mountPath: /fluent-bit/etc/fluent-bit.conf
          readOnly: true
        - mountPath: /mnt
          name: mnt
          readOnly: true
      volumes:
      - hostPath:
          path: /var/log
          type: ""
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
      - name: config
        hostPath:
          path: /files/fluent-bit.conf
          type: File
      - hostPath:
          path: /mnt
          type: ""
        name: mnt