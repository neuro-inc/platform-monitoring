[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[project]
name = "platform_monitoring"
version = "0.0.0"
description = "Apolo platform monitoring"
readme = "README.md"
license = "Proprietary"
authors = [
    { name = "Apolo.us", email = "support@apolo.us" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only"
]
dynamic = ["version"]
requires-python = ">=3.13,<4.0"
dependencies = [
    "aiobotocore==2.22.0",
    "aiohttp[speedups]==3.12.14",
    "aioitertools==0.12.0",
    "apolo-api-client==25.6.0",
    "cachetools==5.5.2",
    "docker-image-py==0.1.13",
    "elasticsearch<8.0.0",
    "iso8601==2.1.0",
    "neuro-auth-client==25.5.1",
    "neuro-config-client==25.9.0",
    "neuro-logging==25.1.0",
    "orjson==3.10.18",
    "trafaret==2.1.1",
    "uvloop==0.21.0",
    "apolo-apps-client==25.8.1",
    "apolo-kube-client==25.9.4",
    "tenacity (>=9.1.2,<10.0.0)",
]

# Remove this section when poetry-dynamic-versioning drops [tool.poetry] support in favor of [project].
[tool.poetry]
name = "platform_monitoring"
version = "0.0.0"
description = "Apolo platform monitoring"
authors = ["Apolo.us <support@apolo.us>"]


[project.scripts]
platform-monitoring-api = "platform_monitoring.api:main"
platform-monitoring-resources-monitor = "platform_monitoring.resources.main:main"
platform-monitoring-logs-compact = "platform_monitoring.log_compact:main"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
apolo-sdk = "25.8.1"
mypy = "1.17.1"
pre-commit = "4.3.0"
pytest = "8.4.2"
pytest-asyncio = "1.1.0"
pytest-cov = "7.0.0"
pytest-xdist = "3.8.0"
python-jose = "3.5.0"
ruff = "0.13.1"
types-cachetools = "6.2.0.20250827"

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
    "E", "F", "I", "C90", "UP", "B", "ASYNC", "N", "FBT", "A", "C4", "EM", "FA", "ICN",
    "G", "PIE", "T20", "PYI", "PT", "RET", "PTH"
]
ignore = [
  "A003",  # Class attribute "..." is shadowing a Python builtin
  "N818",
]

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2
known-first-party = ["platform_monitoring", "tests"]
known-third-party = []

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning:jose",
    "ignore::DeprecationWarning:aiobotocore",
    "ignore::DeprecationWarning:aiohttp.connector",
    "ignore::DeprecationWarning:botocore",
    "ignore:Inheritance class AuthorizedSession from ClientSession is discouraged:DeprecationWarning:",
    "ignore:ssl.PROTOCOL_TLS is deprecated:DeprecationWarning:",
    "ignore::pytest.PytestUnraisableExceptionWarning"
]

[tool.coverage.run]
branch = true
source = ["platform_monitoring"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "aiohttp_security"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp_security.api"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "async_exit_stack"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "async_generator"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jose"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "neuro_auth_client.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "neuromation.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "_pytest.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "setuptools"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "docker_image.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "trafaret"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiobotocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "botocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "platform_config_client.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "iso8601"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "kubernetes.*"
ignore_missing_imports = true
