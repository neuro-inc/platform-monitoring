{{- if or (eq .Values.logs.persistence.type "gcp") (eq .Values.logs.persistence.type "azure") }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "platformMonitoring.minioGateway.fullname" . }}
  labels: {{ include "platformMonitoring.labels.standard" . | nindent 4 }}
    service: minio-gateway
spec:
  type: ClusterIP
  ports:
  - name: http
    port: {{ .Values.minioGateway.port }}
    targetPort: http
  selector:
    app: {{ include "platformMonitoring.name" . }}
    release: {{ .Release.Name | quote }}
    service: minio-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platformMonitoring.minioGateway.fullname" . }}
  labels: {{ include "platformMonitoring.labels.standard" . | nindent 4 }}
    service: minio-gateway
spec:
  replicas: {{ .Values.minioGateway.replicas }}
  selector:
    matchLabels:
      app: {{ include "platformMonitoring.name" . }}
      release: {{ .Release.Name | quote }}
      service: minio-gateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "platformMonitoring.name" . }}
        release: {{ .Release.Name | quote }}
        service: minio-gateway
      annotations:
        checksum/logs-secret: {{ include (print $.Template.BasePath "/logs-storage-key-secret.yaml") . | sha256sum }}
{{- if .Values.minioGateway.podAnnotations }}
{{ toYaml .Values.minioGateway.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: gateway
        {{- with .Values.minioGateway.image }}
        image: {{ .repository }}:{{ .tag }}
        {{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.minioGateway.port }}
            protocol: TCP
        {{- if .Values.minioGateway.resources }}
        resources: {{ toYaml .Values.minioGateway.resources | nindent 10 }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: http
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        {{- if eq .Values.logs.persistence.type "gcp" }}
        args:
        - gateway
        - gcs
        - {{ .Values.logs.persistence.gcp.project | quote }}
        env:
        - name: MINIO_ROOT_USER
          value: minio_access_key
        - name: MINIO_ROOT_PASSWORD
          value: minio_secret_key
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/config/minio/gcs/key_json
        volumeMounts:
        - name: gcs-credentials
          mountPath: /etc/config/minio/gcs
          readOnly: true
        {{- else if eq .Values.logs.persistence.type "azure" }}
        args:
        - gateway
        - azure
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "platformMonitoring.logs.storage.keySecret" . }}
              key: account_name
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "platformMonitoring.logs.storage.keySecret" . }}
              key: account_key
        {{- end }}
      volumes:
      {{- if eq .Values.logs.persistence.type "gcp" }}
      - name: gcs-credentials
        secret:
          secretName: {{ include "platformMonitoring.logs.storage.keySecret" . }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
{{- end }}
