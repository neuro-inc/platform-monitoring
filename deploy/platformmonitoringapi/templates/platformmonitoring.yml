apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformmonitoringapi
  labels:
{{ include "platform-monitoring.labels.standard" . | indent 4 }}
spec:
  replicas: {{ .Values.NP_MONITORING_REPLICAS }}
  selector:
    matchLabels:
      service: platformmonitoringapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformmonitoringapi
      annotations:
{{- if .Values.secrets }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- end }}
{{- if .Values.monitoring.podAnnotations }}
{{ toYaml .Values.monitoring.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: platformmonitoringapi
        image: {{ .Values.IMAGE }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: 8080
            name: tcp-web
            protocol: TCP
{{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
{{- end }}
        env:
        - name: NP_MONITORING_CLUSTER_NAME
          value: {{ .Values.NP_MONITORING_CLUSTER_NAME }}
        - name: NP_MONITORING_PLATFORM_API_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_MONITORING_PLATFORM_AUTH_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_MONITORING_PLATFORM_CONFIG_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_MONITORING_K8S_API_URL
          value: https://kubernetes.default:443
        - name: NP_MONITORING_K8S_AUTH_TYPE
          value: token
        - name: NP_MONITORING_K8S_CA_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NP_MONITORING_K8S_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: NP_MONITORING_PLATFORM_API_URL
          value: {{ .Values.NP_MONITORING_PLATFORM_API_URL }}
        - name: NP_MONITORING_PLATFORM_AUTH_URL
          value: {{ .Values.NP_MONITORING_PLATFORM_AUTH_URL }}
        - name: NP_MONITORING_PLATFORM_CONFIG_URL
          value: {{ .Values.NP_MONITORING_PLATFORM_CONFIG_URL }}
        - name: NP_MONITORING_K8S_NS
          value: {{ .Values.NP_MONITORING_K8S_NS }}
        - name: NP_MONITORING_REGISTRY_URL
          value: {{ .Values.NP_MONITORING_REGISTRY_URL }}
        - name: NP_MONITORING_K8S_KUBELET_PORT
          value: {{ .Values.NP_MONITORING_K8S_KUBELET_PORT | quote }}
        - name: NP_CORS_ORIGINS
          value: {{ .Values.NP_CORS_ORIGINS }}
{{- if .Values.NP_MONITORING_NODE_LABEL_JOB }}
        - name: NP_MONITORING_NODE_LABEL_JOB
          value: {{ .Values.NP_MONITORING_NODE_LABEL_JOB }}
{{- end }}
{{- if .Values.NP_MONITORING_NODE_LABEL_NODE_POOL }}
        - name: NP_MONITORING_NODE_LABEL_NODE_POOL
          value: {{ .Values.NP_MONITORING_NODE_LABEL_NODE_POOL }}
{{- end }}

{{- if eq .Values.logs.persistence.type "aws" }}
        - name: NP_MONITORING_LOGS_STORAGE_TYPE
          value: s3
        - name: NP_MONITORING_S3_REGION
          value: {{ .Values.logs.persistence.aws.region | quote }}
        - name: NP_MONITORING_S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: access_key_id
        - name: NP_MONITORING_S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: secret_access_key
        - name: NP_MONITORING_S3_JOB_LOGS_BUCKET_NAME
          value: {{ .Values.logs.persistence.aws.bucket | quote }}
        - name: NP_MONITORING_S3_JOB_LOGS_KEY_PREFIX_FORMAT
          value: {{ include "platform-monitoring.logs.storage.s3.keyPrefixFormat" . | quote }}
{{- end }}

{{- if eq .Values.logs.persistence.type "gcp" }}
        - name: NP_MONITORING_LOGS_STORAGE_TYPE
          value: s3
        - name: NP_MONITORING_S3_REGION
          value: {{ .Values.logs.persistence.gcp.region | quote }}
        - name: NP_MONITORING_S3_ACCESS_KEY_ID
          value: minio_access_key
        - name: NP_MONITORING_S3_SECRET_ACCESS_KEY
          value: minio_secret_key
        - name: NP_MONITORING_S3_ENDPOINT_URL
          value: "http://localhost:{{ .Values.minio.port }}"
        - name: NP_MONITORING_S3_JOB_LOGS_BUCKET_NAME
          value: {{ .Values.logs.persistence.gcp.bucket | quote }}
        - name: NP_MONITORING_S3_JOB_LOGS_KEY_PREFIX_FORMAT
          value: {{ include "platform-monitoring.logs.storage.s3.keyPrefixFormat" . | quote }}

      - name: minio
        image: {{ .Values.minio.image | quote }}
        args:
        - gateway
        - gcs
        - {{ .Values.logs.persistence.gcp.project }}
        env:
        - name: MINIO_ACCESS_KEY
          value: minio_access_key
        - name: MINIO_SECRET_KEY
          value: minio_secret_key
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /accounts/key.json
        volumeMounts:
        - name: gcs-credentials
          mountPath: /accounts
          readOnly: true
{{ include "platform-monitoring.minio.resources" . | indent 8 }}
{{ include "platform-monitoring.minio.probes" . | indent 8 }}
      volumes:
      - name: gcs-credentials
        secret:
          secretName: {{ include "platform-monitoring.logs.storage.key" . }}
{{- end }}

{{- if eq .Values.logs.persistence.type "azure" }}
        - name: NP_MONITORING_LOGS_STORAGE_TYPE
          value: s3
        - name: NP_MONITORING_S3_REGION
          value: {{ .Values.logs.persistence.azure.region | quote }}
        - name: NP_MONITORING_S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: account_name
        - name: NP_MONITORING_S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: account_key
        - name: NP_MONITORING_S3_ENDPOINT_URL
          value: "http://localhost:{{ .Values.minio.port }}"
        - name: NP_MONITORING_S3_JOB_LOGS_BUCKET_NAME
          value: {{ .Values.logs.persistence.azure.bucket | quote }}
        - name: NP_MONITORING_S3_JOB_LOGS_KEY_PREFIX_FORMAT
          value: {{ include "platform-monitoring.logs.storage.s3.keyPrefixFormat" . | quote }}

      - name: minio
        image: {{ .Values.minio.image | quote }}
        args:
        - gateway
        - azure
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: account_name
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: account_key
{{ include "platform-monitoring.minio.resources" . | indent 8 }}
{{ include "platform-monitoring.minio.probes" . | indent 8 }}
{{- end }}

{{- if eq .Values.logs.persistence.type "minio" }}
        - name: NP_MONITORING_LOGS_STORAGE_TYPE
          value: s3
        - name: NP_MONITORING_S3_ENDPOINT_URL
          value: {{ .Values.logs.persistence.minio.url | quote }}
        - name: NP_MONITORING_S3_REGION
          value: {{ .Values.logs.persistence.minio.region | quote }}
        - name: NP_MONITORING_S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: access_key
        - name: NP_MONITORING_S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "platform-monitoring.logs.storage.key" . }}
              key: secret_key
        - name: NP_MONITORING_S3_JOB_LOGS_BUCKET_NAME
          value: {{ .Values.logs.persistence.minio.bucket | quote }}
        - name: NP_MONITORING_S3_JOB_LOGS_KEY_PREFIX_FORMAT
          value: {{ include "platform-monitoring.logs.storage.s3.keyPrefixFormat" . | quote }}
{{- end }}

{{- if eq .Values.logs.persistence.type "es" }}
        - name: NP_MONITORING_LOGS_STORAGE_TYPE
          value: elasticsearch
        - name: NP_MONITORING_ES_HOSTS
{{- with .Values.logs.persistence.es }}
          value: "http://{{ .host }}:{{ .port }}"
{{- end }}
{{- end }}

      {{- if .Values.DOCKER_LOGIN_ARTIFACTORY_SECRET_NAME }}
      imagePullSecrets:
        - name: {{ .Values.DOCKER_LOGIN_ARTIFACTORY_SECRET_NAME }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: platformmonitoringapi
  annotations:
    traefik.ingress.kubernetes.io/affinity: "true"
    traefik.ingress.kubernetes.io/session-cookie-name: NEURO_MONITORINGAPI_SESSION
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: tcp-web
  selector:
    service: platformmonitoringapi
{{- if .Values.ingress }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: platformmonitoringapi
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefix
{{- if .Values.ingress.extraAnnotations }}
{{ toYaml .Values.ingress.extraAnnotations | indent 4 }}
{{- end }}
spec:
  rules:
  {{- range .Values.ingress.hosts }}
  - host: {{ . | quote }}
    http:
      paths:
      - path: /api/v1/jobs
        backend:
          serviceName: platformmonitoringapi
          servicePort: http
  {{- end }}
{{- end }}
