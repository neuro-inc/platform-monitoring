on:
  workflow_call: {}

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version-file: .python-version
        cache-dependency-path: setup.cfg
    - name: Install dependencies
      run: make setup
    - name: Lint
      run: make lint

  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version-file: .python-version
        cache-dependency-path: setup.cfg
    - name: Install dependencies
      run: make setup
    - name: Run unit tests
      run: make test_unit
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: .coverage-unit.xml
        flags: unit
        name: codecov-unit

  test-integration:
    name: Integration tests
    runs-on: ubuntu-latest
    timeout-minutes: 75
    env:
      MINIKUBE_DRIVER: none
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version-file: .python-version
        cache-dependency-path: setup.cfg
    - name: Install dependencies
      run: make setup
    - name: Login to ghcr.io
      uses: docker/login-action@v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Start minikube
      uses: medyagh/setup-minikube@latest
      id: minikube
      with:
        minikube-version: 1.34.0
        driver: docker
        container-runtime: containerd
        kubernetes-version: v1.31.0
        addons: registry
        start-args: '--nodes 1 --disk-size 30g'
    - uses: azure/setup-helm@v4.3.0
      with:
        version: '3.16.4' # default is latest (stable)
      id: install
    - name: Setup services in minikube
      run: |
        kubectl create secret docker-registry ghcr-secret --docker-server=https://ghcr.io --docker-username=${{ github.actor }} --docker-password=${{ secrets.GITHUB_TOKEN }}
        make apply_configuration_k8s
        helm repo add grafana https://grafana.github.io/helm-charts
        make install_helm_loki
        make install_helm_alloy
        make wait_k8s_pods_ready
        kubectl get pods -A
        make test_k8s
    - name: Port-forward platformadmin
      run: kubectl port-forward svc/platformadmin 8080:8080 &
    - name: Port-forward platformapi
      run: kubectl port-forward svc/platformapi 8081:8080 &
    - name: Wait for port-forwards
      run: sleep 5
    - name: Run integration tests
      env:
        IN_MINIKUBE: "1"
      run: make test_integration
    - name: Dump pod logs for debugging
      if: failure()
      run: |
        echo "Collecting logs from all pods:"
        kubectl --context minikube get pods -o name | while read -r pod; do
          echo "=== Logs for $pod ==="
          kubectl --context minikube logs "$pod" || true
          echo
        done
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: .coverage-integration.xml
        flags: integration
        name: codecov-integration

  image-upload:
    name: Upload image artifact
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version-file: .python-version
        cache-dependency-path: setup.cfg
    - name: Install dependencies
      run: make setup
    - name: Login to ghcr.io
      uses: docker/login-action@v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Build Docker image
      run: make docker_build
    - name: Upload image artifact
      uses: neuro-inc/upload-image-action@v24.4.0
      with:
        image: platformmonitoringapi
        token: ${{ github.token }}

  check:
    name: Check
    needs:
    - lint
    - test-unit
    - test-integration
    - image-upload
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
