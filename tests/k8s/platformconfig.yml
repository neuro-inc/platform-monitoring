apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformconfig
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformconfig
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformconfig
    spec:
      initContainers:
      - name: platformconfig-migrations
        image: platformconfig:latest
        imagePullPolicy: Never
        command: ["alembic", "upgrade", "head"]
        env:
        - name: NP_POSTGRES_HOST
          value: platformconfig-postgres
        - name: NP_POSTGRES_PORT
          value: "5432"
        - name: NP_POSTGRES_USERNAME
          value: postgres
        - name: NP_POSTGRES_PASSWORD
          value: postgres
        - name: NP_POSTGRES_DB_NAME
          value: postgres
      containers:
      - name: platformconfig
        image: platformconfig:latest
        imagePullPolicy: Never
        env:
        - name: NP_API_PORT
          value: "8080"
        - name: NP_PLATFORM_AUTH_URL
          value: http://platformauthapi:8080
        - name: NP_PLATFORM_CONFIG_TOKEN
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6ImNsdXN0ZXIifQ.kZG6EyaHMa2gNzrgKQlwVnZ0OZ5mruFZ0xVAbntm-dU
        - name: NP_PUBLIC_NEURO_REGISTRY_URL
          value: not-important
        - name: NP_PUBLIC_NEURO_HELM_URL
          value: not-important
        - name: NP_PUBLIC_PLATFORM_URL
          value: not-important
        - name: NP_PLATFORM_API_URL
          value: http://platformapi:8080
        - name: NP_AWS_REGION
          value: not-important
        - name: NP_AWS_ACCESS_KEY_ID
          value: not-important
        - name: NP_AWS_SECRET_ACCESS_KEY
          value: not-important
        - name: NP_AWS_ROUTE53_MAIN_ZONE_ID
          value: not-important
        - name: NP_CLUSTER_DNS_SUFFIX
          value: not-important
        - name: NP_K8S_URL
          value: not-important
        - name: NP_K8S_WORKFLOW_NAMESPACE
          value: not-important
        - name: NP_JOB_FALLBACK_HOSTNAME
          value: not-important
        - name: NP_PLATFORM_INFRA_IMAGE_TAG
          value: not-important
        - name: NP_PLATFORM_INFRA_IMAGE_NAME
          value: not-important
        - name: NP_PLATFORM_INFRA_IMAGE_PULL_POLICY
          value: Always
        - name: NP_POSTGRES_HOST
          value: platformconfig-postgres
        - name: NP_POSTGRES_PORT
          value: "5432"
        - name: NP_POSTGRES_USERNAME
          value: postgres
        - name: NP_POSTGRES_PASSWORD
          value: postgres
        - name: NP_POSTGRES_DB_NAME
          value: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: platformconfig
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    service: platformconfig
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformconfig-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformconfig-postgres
  template:
    metadata:
      labels:
        service: platformconfig-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:11.3
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: platformconfig-postgres
  labels:
    app: platformconfig
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   service: platformconfig-postgres
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-cluster
spec:
  template:
    spec:
      restartPolicy: Never
      initContainers:
      - name: wait-for-platform-config
        image: curlimages/curl
        command: [sh]
        args:
        - -c
        - |
          code=-1

          while [ $code != 0 ]
          do
            curl -f "$NP_PLATFORM_CONFIG_URL/healthchecks/liveness"
            code=$?
          done
        env:
        - name: NP_PLATFORM_CONFIG_URL
          value: http://platformconfig:8080
      containers:
      - name: create-cluster
        image: curlimages/curl
        command: [sh]
        args:
        - -c
        - |
          curl -vv -X POST \
            -H "Authorization: Bearer $NP_TOKEN" \
            -d @- \
            "$NP_PLATFORM_CONFIG_URL/api/v1/clusters" <<EOM
          {
              "name": "default",
              "orchestrator": {
                  "is_http_ingress_secure": true,
                  "job_hostname_template": "{job_id}.jobs.neu.ro",
                  "job_internal_hostname_template": "{job_id}.default",
                  "resource_pool_types": [
                      {
                          "name": "minikube",
                          "min_size": 1,
                          "max_size": 1,
                          "cpu": 1.0,
                          "available_cpu": 1.0,
                          "memory_mb": 1024,
                          "available_memory_mb": 1024
                      }
                  ],
                  "resource_presets": [
                      {
                          "name": "cpu-small",
                          "credits_per_hour": "0.0",
                          "cpu": 0.1,
                          "memory_mb": 100
                      }
                  ]
              },
              "storage": {"url": "http://platformapi/api/v1/storage"},
              "blob_storage": {"url": "http://platformapi/api/v1/blob"},
              "registry": {"url": "http://localhost:5000"},
              "monitoring": {"url": "http://platformapi/api/v1/jobs"},
              "secrets": {"url": "http://platformapi/api/v1/secrets"},
              "metrics": {"url": "http://platformapi/api/v1/metrics"},
              "disks": {"url": "http://platformapi/api/v1/disk"},
              "ingress": {"acme_environment": "staging"}
          }
          EOM
        env:
        - name: NP_PLATFORM_CONFIG_URL
          value: http://platformconfig:8080
        - name: NP_TOKEN
          value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6ImNsdXN0ZXIifQ.kZG6EyaHMa2gNzrgKQlwVnZ0OZ5mruFZ0xVAbntm-dU
