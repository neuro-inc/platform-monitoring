image:
  repository: "$IMAGE_REPO"
  tag: "$IMAGE_TAG"

imagePullSecrets: []

containerRuntime:
  name: docker # containerd, cri-o
  port: 9000

replicas: 2

jobsNamespace: default

kubeletPort: 10250

platform:
  clusterName: ""
  authUrl: https://staging.neu.ro
  configUrl: https://staging.neu.ro
  apiUrl: https://staging.neu.ro/api/v1
  registryUrl: ""
  token: {}

resources:
  requests:
    cpu: "0.1"
    memory: "50Mi"
  limits:
    cpu: "1"
    memory: "1Gi"

ingress:
  enabled: false
  ingressClassName: ""
  hosts: []
  annotations: {}

service:
  annotations: {}

secrets: []

podAnnotations: {}

cors:
  origins: []

zipkin: {}

sentry: {}

nodeLabels:
  job: platform.neuromation.io/job
  nodePool: platform.neuromation.io/nodepool

fluentbit:
  nameOverride: fluent-bit
  fullnameOverride: fluent-bit
  image:
    repository: fluent/fluent-bit
    tag: "1.3.7"
  resources:
    requests:
      cpu: 5m
      memory: 32Mi
    limits:
      cpu: 50m
      memory: 128Mi
  tolerations:
    - effect: NoSchedule
      operator: Exists
  taildb:
    directory: /var/lib/platform-monitoring-fluent-bit

fluentd:
  nameOverride: fluentd
  fullnameOverride: fluentd
  image:
    repository: bitnami/fluentd
    tag: 1.10.4-debian-10-r2
  forwardPort: 24224
  podAnnotations: {}
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
  persistence:
    enabled: false
    ## If defined, storageClassName: <storageClassName>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClassName:
    accessMode: ReadWriteOnce
    size: 10Gi
  s3:
    buffer:
      chunkLimitSize: 8M
      flushThreadCount: 16 # number of thread that write files to S3
      timeKey: 1m # chunks will be flushed every minute
      timeKeyWait: 1m # time to wait before flushing chunk to S3

minio:
  image:
    repository: minio/minio
    tag: RELEASE.2022-03-08T22-28-51Z
  port: 9000
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  # livenessProbe:
  #   initialDelaySeconds: 5
  #   periodSeconds: 10
  #   timeoutSeconds: 1
  #   successThreshold: 1
  #   failureThreshold: 3
  # readinessProbe:
  #   initialDelaySeconds: 5
  #   periodSeconds: 10
  #   timeoutSeconds: 1
  #   successThreshold: 1
  #   failureThreshold: 3

logs:
  cleanup_interval_sec: 900
  persistence:
    type: es

    es:
      host: elasticsearch
      port: 9200

    # aws:
    #   accessKeyId: access_key # optional
    #   secretAccessKey: access_key # optional
    #   region: us-east-1
    #   bucket: logs
    #   endpoint: ""
    #   forcePathStyle: false

    # gcp:
    #   serviceAccountKeyBase64:
    #   project: project
    #   location: us
    #   bucket: logs

    # azure:
    #   storageAccountName: account_name
    #   storageAccountKey: account_key
    #   bucket: logs

    ## minio is for on_prem clusters which do not have
    ## any object storage service.
    ##
    # minio:
    #   url: http://minio:9000
    #   accessKey: access_key
    #   secretKey: secret_key
    #   region: region
    #   bucket: logs
